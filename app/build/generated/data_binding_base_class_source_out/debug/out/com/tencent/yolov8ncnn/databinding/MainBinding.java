// Generated by view binder compiler. Do not edit!
package com.tencent.yolov8ncnn.databinding;

import android.view.LayoutInflater;
import android.view.SurfaceView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tencent.yolov8ncnn.CustomDrawView;
import com.tencent.yolov8ncnn.DrawHotSpotView;
import com.tencent.yolov8ncnn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView attemptTitleTxt;

  @NonNull
  public final TextView attemptTxt;

  @NonNull
  public final SurfaceView cameraview;

  @NonNull
  public final CustomDrawView customDrawView;

  @NonNull
  public final View darkOverlay;

  @NonNull
  public final DrawHotSpotView drawHotSpotView;

  @NonNull
  public final ImageView hotSpotImgV;

  @NonNull
  public final TextView madesTitleTxt;

  @NonNull
  public final ImageView pauseImgV;

  @NonNull
  public final TextView pauseTxt;

  @NonNull
  public final ImageView restartImgV;

  @NonNull
  public final TextView scoreTxt;

  @NonNull
  public final Spinner spinnerMode;

  @NonNull
  public final ImageView stopImgV;

  private MainBinding(@NonNull FrameLayout rootView, @NonNull TextView attemptTitleTxt,
      @NonNull TextView attemptTxt, @NonNull SurfaceView cameraview,
      @NonNull CustomDrawView customDrawView, @NonNull View darkOverlay,
      @NonNull DrawHotSpotView drawHotSpotView, @NonNull ImageView hotSpotImgV,
      @NonNull TextView madesTitleTxt, @NonNull ImageView pauseImgV, @NonNull TextView pauseTxt,
      @NonNull ImageView restartImgV, @NonNull TextView scoreTxt, @NonNull Spinner spinnerMode,
      @NonNull ImageView stopImgV) {
    this.rootView = rootView;
    this.attemptTitleTxt = attemptTitleTxt;
    this.attemptTxt = attemptTxt;
    this.cameraview = cameraview;
    this.customDrawView = customDrawView;
    this.darkOverlay = darkOverlay;
    this.drawHotSpotView = drawHotSpotView;
    this.hotSpotImgV = hotSpotImgV;
    this.madesTitleTxt = madesTitleTxt;
    this.pauseImgV = pauseImgV;
    this.pauseTxt = pauseTxt;
    this.restartImgV = restartImgV;
    this.scoreTxt = scoreTxt;
    this.spinnerMode = spinnerMode;
    this.stopImgV = stopImgV;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attempt_title_txt;
      TextView attemptTitleTxt = ViewBindings.findChildViewById(rootView, id);
      if (attemptTitleTxt == null) {
        break missingId;
      }

      id = R.id.attempt_txt;
      TextView attemptTxt = ViewBindings.findChildViewById(rootView, id);
      if (attemptTxt == null) {
        break missingId;
      }

      id = R.id.cameraview;
      SurfaceView cameraview = ViewBindings.findChildViewById(rootView, id);
      if (cameraview == null) {
        break missingId;
      }

      id = R.id.customDrawView;
      CustomDrawView customDrawView = ViewBindings.findChildViewById(rootView, id);
      if (customDrawView == null) {
        break missingId;
      }

      id = R.id.darkOverlay;
      View darkOverlay = ViewBindings.findChildViewById(rootView, id);
      if (darkOverlay == null) {
        break missingId;
      }

      id = R.id.drawHotSpotView;
      DrawHotSpotView drawHotSpotView = ViewBindings.findChildViewById(rootView, id);
      if (drawHotSpotView == null) {
        break missingId;
      }

      id = R.id.hotSpot_imgV;
      ImageView hotSpotImgV = ViewBindings.findChildViewById(rootView, id);
      if (hotSpotImgV == null) {
        break missingId;
      }

      id = R.id.mades_title_txt;
      TextView madesTitleTxt = ViewBindings.findChildViewById(rootView, id);
      if (madesTitleTxt == null) {
        break missingId;
      }

      id = R.id.pause_imgV;
      ImageView pauseImgV = ViewBindings.findChildViewById(rootView, id);
      if (pauseImgV == null) {
        break missingId;
      }

      id = R.id.pause_txt;
      TextView pauseTxt = ViewBindings.findChildViewById(rootView, id);
      if (pauseTxt == null) {
        break missingId;
      }

      id = R.id.restart_imgV;
      ImageView restartImgV = ViewBindings.findChildViewById(rootView, id);
      if (restartImgV == null) {
        break missingId;
      }

      id = R.id.score_txt;
      TextView scoreTxt = ViewBindings.findChildViewById(rootView, id);
      if (scoreTxt == null) {
        break missingId;
      }

      id = R.id.spinnerMode;
      Spinner spinnerMode = ViewBindings.findChildViewById(rootView, id);
      if (spinnerMode == null) {
        break missingId;
      }

      id = R.id.stop_imgV;
      ImageView stopImgV = ViewBindings.findChildViewById(rootView, id);
      if (stopImgV == null) {
        break missingId;
      }

      return new MainBinding((FrameLayout) rootView, attemptTitleTxt, attemptTxt, cameraview,
          customDrawView, darkOverlay, drawHotSpotView, hotSpotImgV, madesTitleTxt, pauseImgV,
          pauseTxt, restartImgV, scoreTxt, spinnerMode, stopImgV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

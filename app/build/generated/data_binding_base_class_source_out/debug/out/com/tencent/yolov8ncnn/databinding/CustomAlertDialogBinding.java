// Generated by view binder compiler. Do not edit!
package com.tencent.yolov8ncnn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tencent.yolov8ncnn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomAlertDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button bottomConfirm;

  @NonNull
  public final LinearLayout clPop;

  @NonNull
  public final LinearLayout ll;

  @NonNull
  public final TextView tvMess;

  @NonNull
  public final TextView tvTitie;

  private CustomAlertDialogBinding(@NonNull LinearLayout rootView, @NonNull Button bottomConfirm,
      @NonNull LinearLayout clPop, @NonNull LinearLayout ll, @NonNull TextView tvMess,
      @NonNull TextView tvTitie) {
    this.rootView = rootView;
    this.bottomConfirm = bottomConfirm;
    this.clPop = clPop;
    this.ll = ll;
    this.tvMess = tvMess;
    this.tvTitie = tvTitie;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomAlertDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomAlertDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_alert_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomAlertDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_confirm;
      Button bottomConfirm = ViewBindings.findChildViewById(rootView, id);
      if (bottomConfirm == null) {
        break missingId;
      }

      LinearLayout clPop = (LinearLayout) rootView;

      id = R.id.ll;
      LinearLayout ll = ViewBindings.findChildViewById(rootView, id);
      if (ll == null) {
        break missingId;
      }

      id = R.id.tv_mess;
      TextView tvMess = ViewBindings.findChildViewById(rootView, id);
      if (tvMess == null) {
        break missingId;
      }

      id = R.id.tv_titie;
      TextView tvTitie = ViewBindings.findChildViewById(rootView, id);
      if (tvTitie == null) {
        break missingId;
      }

      return new CustomAlertDialogBinding((LinearLayout) rootView, bottomConfirm, clPop, ll, tvMess,
          tvTitie);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
